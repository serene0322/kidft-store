{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\react-course\\\\kidft-store\\\\src\\\\components\\\\video\\\\video.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useEffect, useState, useRef } from \"react\";\nimport VideoContext from \"../../context/VideoContext\";\nimport \"./video.css\";\nimport { Modal, Input, notification, Avatar } from \"antd\";\nimport VideoIcon from \"../../assets/video.svg\";\nimport VideoOff from \"../../assets/video-off.svg\";\nimport Msg_Illus from \"../../assets/msg_illus.svg\";\nimport Msg from \"../../assets/msg.svg\";\nimport ScreenShare from \"../../assets/share_screen.svg\";\nimport { UserOutlined, MessageOutlined } from \"@ant-design/icons\";\nimport { socket } from \"../../context/VideoState\"; // const socket = io()\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  Search\n} = Input;\n\nconst Video = () => {\n  _s();\n\n  const {\n    call,\n    callAccepted,\n    myVideo,\n    userVideo,\n    stream,\n    name,\n    callEnded,\n    sendMsg: sendMsgFunc,\n    msgRcv,\n    chat,\n    setChat,\n    userName,\n    myVdoStatus,\n    fullScreen,\n    handleScreenSharing,\n    userVdoStatus,\n    updateVideo,\n    myMicStatus,\n    userMicStatus,\n    updateMic\n  } = useContext(VideoContext);\n  const [sendMsg, setSendMsg] = useState(\"\");\n  const [isModalVisible, setIsModalVisible] = useState(false);\n  socket.on(\"msgRcv\", _ref => {\n    let {\n      name,\n      msg: value,\n      sender\n    } = _ref;\n    let msg = {};\n    msg.msg = value;\n    msg.type = \"rcv\";\n    msg.sender = sender;\n    msg.timestamp = Date.now();\n    setChat([...chat, msg]);\n  });\n  const dummy = useRef();\n  useEffect(() => {\n    if (dummy === null || dummy === void 0 ? void 0 : dummy.current) dummy.current.scrollIntoView({\n      behavior: \"smooth\"\n    });\n  }, [chat]);\n\n  const showModal = showVal => {\n    setIsModalVisible(showVal);\n  };\n\n  const onSearch = value => {\n    if (value && value.length) sendMsgFunc(value);\n    setSendMsg(\"\");\n  };\n\n  useEffect(() => {\n    if (msgRcv.value && !isModalVisible) {\n      notification.open({\n        message: \"\",\n        description: `${msgRcv.sender}: ${msgRcv.value}`,\n        icon: /*#__PURE__*/_jsxDEV(MessageOutlined, {\n          style: {\n            color: \"#108ee9\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 15\n        }, this)\n      });\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"grid\",\n    children: [stream ? /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        textAlign: \"center\"\n      },\n      className: \"card\",\n      id: callAccepted && !callEnded ? \"video1\" : \"video3\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          height: \"2rem\"\n        },\n        children: /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: myVdoStatus && name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"video-avatar-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"video\", {\n          playsInline: true,\n          muted: true,\n          onClick: fullScreen,\n          ref: myVideo,\n          autoPlay: true,\n          className: \"video-active\",\n          style: {\n            opacity: `${myVdoStatus ? \"1\" : \"0\"}`\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Avatar, {\n          style: {\n            backgroundColor: \"#116\",\n            position: \"absolute\",\n            opacity: `${myVdoStatus ? \"-1\" : \"2\"}`\n          },\n          size: 98,\n          icon: !name && /*#__PURE__*/_jsxDEV(UserOutlined, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 30\n          }, this),\n          children: name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"iconsDiv\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"icons\",\n          onClick: () => {\n            updateMic();\n          },\n          tabIndex: \"0\",\n          children: /*#__PURE__*/_jsxDEV(\"i\", {\n            className: `fa fa-microphone${myMicStatus ? \"\" : \"-slash\"}`,\n            style: {\n              transform: \"scaleX(-1)\"\n            },\n            \"aria-label\": `${myMicStatus ? \"mic on\" : \"mic off\"}`,\n            \"aria-hidden\": \"true\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 13\n        }, this), callAccepted && !callEnded && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"icons\",\n          onClick: () => {\n            setIsModalVisible(!isModalVisible);\n          },\n          tabIndex: \"0\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: Msg,\n            alt: \"chat icon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Modal, {\n          title: \"Chat\",\n          footer: null,\n          visible: isModalVisible,\n          onOk: () => showModal(false),\n          onCancel: () => showModal(false),\n          style: {\n            maxHeight: \"100px\"\n          },\n          children: [chat.length ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"msg_flex\",\n            children: [chat.map(msg => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: msg.type === \"sent\" ? \"msg_sent\" : \"msg_rcv\",\n              children: msg.msg\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 154,\n              columnNumber: 21\n            }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n              ref: dummy,\n              id: \"no_border\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 160,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"chat_img_div\",\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: Msg_Illus,\n              alt: \"msg_illus\",\n              className: \"img_illus\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 164,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Search, {\n            placeholder: \"your message\",\n            allowClear: true,\n            className: \"input_msg\",\n            enterButton: \"Send \\uD83D\\uDE80\",\n            onChange: e => setSendMsg(e.target.value),\n            value: sendMsg,\n            size: \"large\",\n            onSearch: onSearch\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 13\n        }, this), callAccepted && !callEnded && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"icons\",\n          onClick: () => handleScreenSharing(),\n          tabIndex: \"0\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: ScreenShare,\n            alt: \"share screen\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"icons\",\n          onClick: () => updateVideo(),\n          tabIndex: \"0\",\n          children: myVdoStatus ? /*#__PURE__*/_jsxDEV(\"img\", {\n            src: VideoIcon,\n            alt: \"video on icon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(\"img\", {\n            src: VideoOff,\n            alt: \"video off icon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bouncing-loader\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 9\n    }, this), callAccepted && !callEnded && userVideo && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card2\",\n      style: {\n        textAlign: \"center\"\n      },\n      id: \"video2\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          height: \"2rem\"\n        },\n        children: /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: userVdoStatus && (call.name || userName)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"video-avatar-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"video\", {\n          playsInline: true,\n          ref: userVideo,\n          onClick: fullScreen,\n          autoPlay: true,\n          className: \"video-active\",\n          style: {\n            opacity: `${userVdoStatus ? \"1\" : \"0\"}`\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Avatar, {\n          style: {\n            backgroundColor: \"#116\",\n            position: \"absolute\",\n            opacity: `${userVdoStatus ? \"-1\" : \"2\"}`\n          },\n          size: 98,\n          icon: !(userName || call.name) && /*#__PURE__*/_jsxDEV(UserOutlined, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 230,\n            columnNumber: 49\n          }, this),\n          children: userName || call.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 13\n        }, this), !userMicStatus && /*#__PURE__*/_jsxDEV(\"i\", {\n          style: {\n            position: \"absolute\",\n            top: \"0\",\n            left: \"0\",\n            padding: \"0.3rem\",\n            backgroundColor: \"#fefefebf\"\n          },\n          className: \"fad fa-volume-mute fa-2x\",\n          \"aria-hidden\": \"true\",\n          \"aria-label\": \"microphone muted\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Video, \"4slZE//yZHa95JAq9I2vKwL5/J8=\");\n\n_c = Video;\nexport default Video;\n\nvar _c;\n\n$RefreshReg$(_c, \"Video\");","map":{"version":3,"sources":["C:/Users/user/Desktop/react-course/kidft-store/src/components/video/video.js"],"names":["React","useContext","useEffect","useState","useRef","VideoContext","Modal","Input","notification","Avatar","UserOutlined","MessageOutlined","socket","Search","Video","call","callAccepted","myVideo","userVideo","stream","name","callEnded","sendMsg","sendMsgFunc","msgRcv","chat","setChat","userName","myVdoStatus","fullScreen","handleScreenSharing","userVdoStatus","updateVideo","myMicStatus","userMicStatus","updateMic","setSendMsg","isModalVisible","setIsModalVisible","on","msg","value","sender","type","timestamp","Date","now","dummy","current","scrollIntoView","behavior","showModal","showVal","onSearch","length","open","message","description","icon","color","textAlign","height","opacity","backgroundColor","position","transform","Msg","maxHeight","map","Msg_Illus","e","target","ScreenShare","VideoIcon","VideoOff","top","left","padding"],"mappings":"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","sourcesContent":["import React, { useContext, useEffect, useState, useRef } from \"react\";\r\nimport VideoContext from \"../../context/VideoContext\";\r\nimport \"./video.css\";\r\nimport { Modal, Input, notification, Avatar } from \"antd\";\r\nimport VideoIcon from \"../../assets/video.svg\";\r\nimport VideoOff from \"../../assets/video-off.svg\";\r\nimport Msg_Illus from \"../../assets/msg_illus.svg\";\r\nimport Msg from \"../../assets/msg.svg\";\r\nimport ScreenShare from \"../../assets/share_screen.svg\";\r\nimport { UserOutlined, MessageOutlined } from \"@ant-design/icons\";\r\n\r\nimport { socket } from \"../../context/VideoState\";\r\n\r\n// const socket = io()\r\nconst { Search } = Input;\r\nconst Video = () => {\r\n  const {\r\n    call,\r\n    callAccepted,\r\n    myVideo,\r\n    userVideo,\r\n    stream,\r\n    name,\r\n\r\n    callEnded,\r\n\r\n    sendMsg: sendMsgFunc,\r\n    msgRcv,\r\n    chat,\r\n    setChat,\r\n    userName,\r\n    myVdoStatus,\r\n\r\n    fullScreen,\r\n    handleScreenSharing,\r\n    userVdoStatus,\r\n    updateVideo,\r\n    myMicStatus,\r\n    userMicStatus,\r\n    updateMic,\r\n  } = useContext(VideoContext);\r\n\r\n  const [sendMsg, setSendMsg] = useState(\"\");\r\n  const [isModalVisible, setIsModalVisible] = useState(false);\r\n  socket.on(\"msgRcv\", ({ name, msg: value, sender }) => {\r\n    let msg = {};\r\n    msg.msg = value;\r\n    msg.type = \"rcv\";\r\n    msg.sender = sender;\r\n    msg.timestamp = Date.now();\r\n    setChat([...chat, msg]);\r\n  });\r\n\r\n  const dummy = useRef();\r\n\r\n  useEffect(() => {\r\n    if (dummy?.current) dummy.current.scrollIntoView({ behavior: \"smooth\" });\r\n  }, [chat]);\r\n\r\n  const showModal = (showVal) => {\r\n    setIsModalVisible(showVal);\r\n  };\r\n\r\n  const onSearch = (value) => {\r\n    if (value && value.length) sendMsgFunc(value);\r\n    setSendMsg(\"\");\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (msgRcv.value && !isModalVisible) {\r\n      notification.open({\r\n        message: \"\",\r\n        description: `${msgRcv.sender}: ${msgRcv.value}`,\r\n        icon: <MessageOutlined style={{ color: \"#108ee9\" }} />,\r\n      });\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"grid\">\r\n      {stream ? (\r\n        <div\r\n          style={{ textAlign: \"center\" }}\r\n          className=\"card\"\r\n          id={callAccepted && !callEnded ? \"video1\" : \"video3\"}\r\n        >\r\n          <div style={{ height: \"2rem\" }}>\r\n            <h3>{myVdoStatus && name}</h3>\r\n          </div>\r\n          <div className=\"video-avatar-container\">\r\n            <video\r\n              playsInline\r\n              muted\r\n              onClick={fullScreen}\r\n              ref={myVideo}\r\n              autoPlay\r\n              className=\"video-active\"\r\n              style={{\r\n                opacity: `${myVdoStatus ? \"1\" : \"0\"}`,\r\n              }}\r\n            />\r\n\r\n            <Avatar\r\n              style={{\r\n                backgroundColor: \"#116\",\r\n                position: \"absolute\",\r\n                opacity: `${myVdoStatus ? \"-1\" : \"2\"}`,\r\n              }}\r\n              size={98}\r\n              icon={!name && <UserOutlined />}\r\n            >\r\n              {name}\r\n            </Avatar>\r\n          </div>\r\n\r\n          <div className=\"iconsDiv\">\r\n            <div\r\n              className=\"icons\"\r\n              onClick={() => {\r\n                updateMic();\r\n              }}\r\n              tabIndex=\"0\"\r\n            >\r\n              <i\r\n                className={`fa fa-microphone${myMicStatus ? \"\" : \"-slash\"}`}\r\n                style={{ transform: \"scaleX(-1)\" }}\r\n                aria-label={`${myMicStatus ? \"mic on\" : \"mic off\"}`}\r\n                aria-hidden=\"true\"\r\n              ></i>\r\n            </div>\r\n\r\n            {callAccepted && !callEnded && (\r\n              <div\r\n                className=\"icons\"\r\n                onClick={() => {\r\n                  setIsModalVisible(!isModalVisible);\r\n                }}\r\n                tabIndex=\"0\"\r\n              >\r\n                <img src={Msg} alt=\"chat icon\" />\r\n              </div>\r\n            )}\r\n            <Modal\r\n              title=\"Chat\"\r\n              footer={null}\r\n              visible={isModalVisible}\r\n              onOk={() => showModal(false)}\r\n              onCancel={() => showModal(false)}\r\n              style={{ maxHeight: \"100px\" }}\r\n            >\r\n              {chat.length ? (\r\n                <div className=\"msg_flex\">\r\n                  {chat.map((msg) => (\r\n                    <div\r\n                      className={msg.type === \"sent\" ? \"msg_sent\" : \"msg_rcv\"}\r\n                    >\r\n                      {msg.msg}\r\n                    </div>\r\n                  ))}\r\n                  <div ref={dummy} id=\"no_border\"></div>\r\n                </div>\r\n              ) : (\r\n                <div className=\"chat_img_div\">\r\n                  <img src={Msg_Illus} alt=\"msg_illus\" className=\"img_illus\" />\r\n                </div>\r\n              )}\r\n              <Search\r\n                placeholder=\"your message\"\r\n                allowClear\r\n                className=\"input_msg\"\r\n                enterButton=\"Send 🚀\"\r\n                onChange={(e) => setSendMsg(e.target.value)}\r\n                value={sendMsg}\r\n                size=\"large\"\r\n                onSearch={onSearch}\r\n              />\r\n            </Modal>\r\n            {callAccepted && !callEnded && (\r\n              <div\r\n                className=\"icons\"\r\n                onClick={() => handleScreenSharing()} \r\n                tabIndex=\"0\"\r\n              >\r\n                <img src={ScreenShare} alt=\"share screen\" />\r\n              </div>\r\n            )}\r\n\r\n            <div className=\"icons\" onClick={() => updateVideo()} tabIndex=\"0\">\r\n              {myVdoStatus ? (\r\n                <img src={VideoIcon} alt=\"video on icon\" />\r\n              ) : (\r\n                <img src={VideoOff} alt=\"video off icon\" />\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        <div className=\"bouncing-loader\">\r\n          <div></div>\r\n          <div></div>\r\n          <div></div>\r\n        </div>\r\n      )}\r\n\r\n      {callAccepted && !callEnded && userVideo && (\r\n        <div className=\"card2\" style={{ textAlign: \"center\" }} id=\"video2\">\r\n          <div style={{ height: \"2rem\" }}>\r\n            <h3>{userVdoStatus && (call.name || userName)}</h3>\r\n          </div>\r\n\r\n          <div className=\"video-avatar-container\">\r\n            <video\r\n              playsInline\r\n              ref={userVideo}             \r\n              onClick={fullScreen}\r\n              autoPlay\r\n              className=\"video-active\"\r\n              style={{\r\n                opacity: `${userVdoStatus ? \"1\" : \"0\"}`,\r\n              }}\r\n            />\r\n\r\n            <Avatar\r\n              style={{\r\n                backgroundColor: \"#116\",\r\n                position: \"absolute\",\r\n                opacity: `${userVdoStatus ? \"-1\" : \"2\"}`,\r\n              }}\r\n              size={98}\r\n              icon={!(userName || call.name) && <UserOutlined />}\r\n            >\r\n              {userName || call.name}\r\n            </Avatar>\r\n            {!userMicStatus && (\r\n              <i\r\n                style={{\r\n                  position: \"absolute\",\r\n                  top: \"0\",\r\n                  left: \"0\",\r\n                  padding: \"0.3rem\",\r\n                  backgroundColor: \"#fefefebf\",\r\n                }}\r\n                className=\"fad fa-volume-mute fa-2x\"\r\n                aria-hidden=\"true\"\r\n                aria-label=\"microphone muted\"\r\n              ></i>\r\n            )}\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Video;"]},"metadata":{},"sourceType":"module"}