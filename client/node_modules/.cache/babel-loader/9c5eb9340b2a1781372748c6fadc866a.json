{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\react-course\\\\kidft-store\\\\src\\\\components\\\\sign-in\\\\sign-in.component.jsx\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport FormInput from \"../form-input/form-input.component\";\nimport CustomButton from \"../custom-button/custom-button.component\";\nimport { googleSignInStart, emailSignInStart } from \"../../redux/user/user.actions\";\nimport { toast } from \"react-toastify\";\nimport './sign-in.styles.scss';\nimport { Link } from \"react-router-dom\"; //use class component because need to store what users typing in\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass SignIn extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleSubmit = async e => {\n      e.preventDefault();\n      const {\n        emailSignInStart\n      } = this.props;\n      const {\n        email,\n        password\n      } = this.state;\n\n      try {\n        emailSignInStart(email, password);\n      } catch (error) {\n        toast.error(error.message);\n      } //delete\n      // try {\n      //     await auth.signInWithEmailAndPassword(email, password);\n      //     //clear the state if success sign in\n      //     this.setState({ email: '', password: '' });\n      // } catch (error) {\n      //     console.log(error);\n      //     //alert user whether email or password is wrong\n      //     toast.error(error.message);\n      // }\n\n    };\n\n    this.handleChange = e => {\n      //to pull both the value and name of our event.target\n      const {\n        value,\n        name\n      } = e.target;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.state = {\n      email: '',\n      password: ''\n    };\n  }\n\n  render() {\n    const {\n      googleSignInStart\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sign-in\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"I already have an account\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Sign in with your email and password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: this.handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(FormInput, {\n          name: \"email\",\n          type: \"email\",\n          value: this.state.email,\n          handleChange: this.handleChange,\n          label: \"Email\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n          name: \"password\",\n          type: \"password\",\n          value: this.state.password,\n          handleChange: this.handleChange,\n          label: \"Password\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/forgot-password\",\n          className: \"forgot-password\",\n          children: \"Forgot Password?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"buttons\",\n          children: [/*#__PURE__*/_jsxDEV(CustomButton, {\n            type: \"submit\",\n            children: \" Sign in \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(CustomButton, {\n            type: \"button\",\n            onClick: googleSignInStart,\n            isGoogleSignIn: true,\n            children: \"Sign in with Google\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  googleSignInStart: () => dispatch(googleSignInStart()),\n  emailSignInStart: (email, password) => dispatch(emailSignInStart({\n    email,\n    password\n  }))\n});\n\nexport default connect(null, mapDispatchToProps)(SignIn);","map":{"version":3,"sources":["C:/Users/user/Desktop/react-course/kidft-store/src/components/sign-in/sign-in.component.jsx"],"names":["React","connect","FormInput","CustomButton","googleSignInStart","emailSignInStart","toast","Link","SignIn","Component","constructor","props","handleSubmit","e","preventDefault","email","password","state","error","message","handleChange","value","name","target","setState","render","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,OAAOC,SAAP,MAAsB,oCAAtB;AACA,OAAOC,YAAP,MAAyB,0CAAzB;AAEA,SAASC,iBAAT,EAA4BC,gBAA5B,QAAoD,+BAApD;AACA,SAASC,KAAT,QAAsB,gBAAtB;AAEA,OAAO,uBAAP;AACA,SAASC,IAAT,QAAqB,kBAArB,C,CAEA;;;;AACA,MAAMC,MAAN,SAAqBR,KAAK,CAACS,SAA3B,CAAqC;AACjCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SASnBC,YATmB,GASJ,MAAMC,CAAN,IAAW;AACtBA,MAAAA,CAAC,CAACC,cAAF;AACA,YAAM;AAAET,QAAAA;AAAF,UAAuB,KAAKM,KAAlC;AACA,YAAM;AAAEI,QAAAA,KAAF;AAASC,QAAAA;AAAT,UAAsB,KAAKC,KAAjC;;AAEA,UAAI;AACAZ,QAAAA,gBAAgB,CAACU,KAAD,EAAQC,QAAR,CAAhB;AACH,OAFD,CAEE,OAAME,KAAN,EAAa;AACXZ,QAAAA,KAAK,CAACY,KAAN,CAAYA,KAAK,CAACC,OAAlB;AACH,OATqB,CAUtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACH,KA7BkB;;AAAA,SA+BnBC,YA/BmB,GA+BHP,CAAD,IAAO;AAClB;AACA,YAAM;AAAEQ,QAAAA,KAAF;AAASC,QAAAA;AAAT,UAAkBT,CAAC,CAACU,MAA1B;AAEA,WAAKC,QAAL,CAAc;AAAE,SAACF,IAAD,GAAQD;AAAV,OAAd;AACH,KApCkB;;AAGf,SAAKJ,KAAL,GAAa;AACTF,MAAAA,KAAK,EAAE,EADE;AAETC,MAAAA,QAAQ,EAAE;AAFD,KAAb;AAIH;;AA+BDS,EAAAA,MAAM,GAAG;AACL,UAAM;AAAErB,MAAAA;AAAF,QAAwB,KAAKO,KAAnC;AACA,wBACI;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,eAII;AAAM,QAAA,QAAQ,EAAE,KAAKC,YAArB;AAAA,gCACI,QAAC,SAAD;AACI,UAAA,IAAI,EAAC,OADT;AAEI,UAAA,IAAI,EAAC,OAFT;AAGI,UAAA,KAAK,EAAE,KAAKK,KAAL,CAAWF,KAHtB;AAII,UAAA,YAAY,EAAE,KAAKK,YAJvB;AAKI,UAAA,KAAK,EAAC,OALV;AAMI,UAAA,QAAQ;AANZ;AAAA;AAAA;AAAA;AAAA,gBADJ,eAUI,QAAC,SAAD;AACI,UAAA,IAAI,EAAC,UADT;AAEI,UAAA,IAAI,EAAC,UAFT;AAGI,UAAA,KAAK,EAAE,KAAKH,KAAL,CAAWD,QAHtB;AAII,UAAA,YAAY,EAAE,KAAKI,YAJvB;AAKI,UAAA,KAAK,EAAC,UALV;AAMI,UAAA,QAAQ;AANZ;AAAA;AAAA;AAAA;AAAA,gBAVJ,eAkBI,QAAC,IAAD;AAAM,UAAA,EAAE,EAAC,kBAAT;AAA4B,UAAA,SAAS,EAAC,iBAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAlBJ,eAqBI;AAAK,UAAA,SAAS,EAAC,SAAf;AAAA,kCACI,QAAC,YAAD;AAAc,YAAA,IAAI,EAAC,QAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI,QAAC,YAAD;AAAc,YAAA,IAAI,EAAC,QAAnB;AAA4B,YAAA,OAAO,EAAEhB,iBAArC;AAAwD,YAAA,cAAc,MAAtE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBArBJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAmCH;;AA5EgC;;AA+ErC,MAAMsB,kBAAkB,GAAGC,QAAQ,KAAK;AACpCvB,EAAAA,iBAAiB,EAAE,MAAMuB,QAAQ,CAACvB,iBAAiB,EAAlB,CADG;AAEpCC,EAAAA,gBAAgB,EAAE,CAACU,KAAD,EAAQC,QAAR,KACdW,QAAQ,CAACtB,gBAAgB,CAAC;AAAEU,IAAAA,KAAF;AAASC,IAAAA;AAAT,GAAD,CAAjB;AAHwB,CAAL,CAAnC;;AAMA,eAAef,OAAO,CAAC,IAAD,EAAOyB,kBAAP,CAAP,CAAkClB,MAAlC,CAAf","sourcesContent":["import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport FormInput from \"../form-input/form-input.component\";\r\nimport CustomButton from \"../custom-button/custom-button.component\";\r\n\r\nimport { googleSignInStart, emailSignInStart } from \"../../redux/user/user.actions\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nimport './sign-in.styles.scss';\r\nimport { Link } from \"react-router-dom\";\r\n\r\n//use class component because need to store what users typing in\r\nclass SignIn extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            email: '',\r\n            password: ''\r\n        }\r\n    }\r\n\r\n    handleSubmit = async e => {\r\n        e.preventDefault();\r\n        const { emailSignInStart } = this.props;\r\n        const { email, password } = this.state;\r\n\r\n        try {\r\n            emailSignInStart(email, password);\r\n        } catch(error) {\r\n            toast.error(error.message);\r\n        }\r\n        //delete\r\n        // try {\r\n        //     await auth.signInWithEmailAndPassword(email, password);\r\n        //     //clear the state if success sign in\r\n        //     this.setState({ email: '', password: '' });\r\n        // } catch (error) {\r\n        //     console.log(error);\r\n        //     //alert user whether email or password is wrong\r\n        //     toast.error(error.message);\r\n        // }\r\n    };\r\n\r\n    handleChange = (e) => {\r\n        //to pull both the value and name of our event.target\r\n        const { value, name } = e.target;\r\n\r\n        this.setState({ [name]: value });\r\n    };\r\n\r\n    render() {\r\n        const { googleSignInStart } = this.props;\r\n        return (\r\n            <div className='sign-in'>\r\n                <h2>I already have an account</h2>\r\n                <span>Sign in with your email and password</span>\r\n\r\n                <form onSubmit={this.handleSubmit}>\r\n                    <FormInput\r\n                        name=\"email\"\r\n                        type=\"email\"\r\n                        value={this.state.email}\r\n                        handleChange={this.handleChange}\r\n                        label='Email'\r\n                        required\r\n                    />\r\n\r\n                    <FormInput\r\n                        name=\"password\"\r\n                        type=\"password\"\r\n                        value={this.state.password}\r\n                        handleChange={this.handleChange}\r\n                        label='Password'\r\n                        required\r\n                    />\r\n                    <Link to='/forgot-password' className='forgot-password'>\r\n                        Forgot Password?\r\n                    </Link>\r\n                    <div className=\"buttons\">\r\n                        <CustomButton type=\"submit\"> Sign in </CustomButton>\r\n                        <CustomButton type=\"button\" onClick={googleSignInStart} isGoogleSignIn>\r\n                            Sign in with Google\r\n                        </CustomButton>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    googleSignInStart: () => dispatch(googleSignInStart()),\r\n    emailSignInStart: (email, password) =>\r\n        dispatch(emailSignInStart({ email, password }))\r\n});\r\n\r\nexport default connect(null, mapDispatchToProps)(SignIn);"]},"metadata":{},"sourceType":"module"}