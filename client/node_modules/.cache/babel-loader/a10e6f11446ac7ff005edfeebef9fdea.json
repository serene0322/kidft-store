{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\react-course\\\\kidft-store\\\\src\\\\pages\\\\forgot-password\\\\forgot-password.component.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { auth } from \"../../firebase/firebase.utils\";\nimport { useSelector } from \"react-redux\";\nimport './forgot-password.styles.scss';\nimport FormInput from \"../../components/form-input/form-input.component\";\nimport CustomButton from \"../../components/custom-button/custom-button.component\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ForgotPasswordPage = ({\n  history\n}) => {\n  _s();\n\n  const [email, setEmail] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setLoading(true);\n    const config = {\n      url: 'http://localhost:3000/signin',\n      handleCodeInApp: true\n    };\n    await auth.sendPasswordResetEmail(email, config).then(() => {\n      setEmail('');\n      setLoading(false);\n      alert('Please check your email for password reset link');\n    }).catch(e => {\n      setLoading(false);\n      alert(e.message);\n      console.log('ERROR MESSAGE IN FORGOT PASSWORD ERROR', e);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"forgot-password-page\",\n    children: [loading ? /*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-danger\",\n      children: \"Loading\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Forgot Passowrd ? \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Enter your email address to reset password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(FormInput, {\n        name: \"email\",\n        type: \"email\",\n        value: email,\n        handleChange: e => setEmail(e.target.value),\n        label: \"Email\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-raised\",\n        disabled: !email,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ForgotPasswordPage, \"GJ4bGuor3Bl+gOvF0O6ErTtqrIU=\");\n\n_c = ForgotPasswordPage;\nexport default ForgotPasswordPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"ForgotPasswordPage\");","map":{"version":3,"sources":["C:/Users/user/Desktop/react-course/kidft-store/src/pages/forgot-password/forgot-password.component.jsx"],"names":["React","useState","useEffect","auth","useSelector","FormInput","CustomButton","ForgotPasswordPage","history","email","setEmail","loading","setLoading","handleSubmit","e","preventDefault","config","url","handleCodeInApp","sendPasswordResetEmail","then","alert","catch","message","console","log","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,IAAT,QAAqB,+BAArB;AACA,SAASC,WAAT,QAA4B,aAA5B;AAEA,OAAO,+BAAP;AAEA,OAAOC,SAAP,MAAsB,kDAAtB;AACA,OAAOC,YAAP,MAAyB,wDAAzB;;;AAEA,MAAMC,kBAAkB,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAiB;AAAA;;AACxC,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBT,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACU,OAAD,EAAUC,UAAV,IAAwBX,QAAQ,CAAC,KAAD,CAAtC;;AAEA,QAAMY,YAAY,GAAG,MAAOC,CAAP,IAAa;AAC9BA,IAAAA,CAAC,CAACC,cAAF;AACAH,IAAAA,UAAU,CAAC,IAAD,CAAV;AAEA,UAAMI,MAAM,GAAG;AACXC,MAAAA,GAAG,EAAE,8BADM;AAEXC,MAAAA,eAAe,EAAE;AAFN,KAAf;AAKA,UAAMf,IAAI,CAACgB,sBAAL,CAA4BV,KAA5B,EAAmCO,MAAnC,EACLI,IADK,CACA,MAAM;AACRV,MAAAA,QAAQ,CAAC,EAAD,CAAR;AACAE,MAAAA,UAAU,CAAC,KAAD,CAAV;AACAS,MAAAA,KAAK,CAAC,iDAAD,CAAL;AACH,KALK,EAMLC,KANK,CAMER,CAAD,IAAO;AACVF,MAAAA,UAAU,CAAC,KAAD,CAAV;AACAS,MAAAA,KAAK,CAACP,CAAC,CAACS,OAAH,CAAL;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,wCAAZ,EAAsDX,CAAtD;AACH,KAVK,CAAN;AAWH,GApBD;;AAsBA,sBACI;AAAK,IAAA,SAAS,EAAC,sBAAf;AAAA,eACKH,OAAO,gBACJ;AAAI,MAAA,SAAS,EAAC,aAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADI,gBAGJ,QAAC,KAAD,CAAO,QAAP;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAJR,eAUI;AAAM,MAAA,QAAQ,EAAEE,YAAhB;AAAA,8BAEI,QAAC,SAAD;AACI,QAAA,IAAI,EAAC,OADT;AAEI,QAAA,IAAI,EAAC,OAFT;AAGI,QAAA,KAAK,EAAEJ,KAHX;AAII,QAAA,YAAY,EAAEK,CAAC,IAAIJ,QAAQ,CAACI,CAAC,CAACY,MAAF,CAASC,KAAV,CAJ/B;AAKI,QAAA,KAAK,EAAC,OALV;AAMI,QAAA,QAAQ;AANZ;AAAA;AAAA;AAAA;AAAA,cAFJ,eAYI;AAAA;AAAA;AAAA;AAAA,cAZJ,eAaI;AAAQ,QAAA,SAAS,EAAC,gBAAlB;AAAmC,QAAA,QAAQ,EAAE,CAAClB,KAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAbJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAVJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AA8BH,CAxDD;;GAAMF,kB;;KAAAA,kB;AA0DN,eAAeA,kBAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { auth } from \"../../firebase/firebase.utils\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nimport './forgot-password.styles.scss'\r\n\r\nimport FormInput from \"../../components/form-input/form-input.component\";\r\nimport CustomButton from \"../../components/custom-button/custom-button.component\";\r\n\r\nconst ForgotPasswordPage = ({ history }) => {\r\n    const [email, setEmail] = useState(\"\");\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        setLoading(true);\r\n\r\n        const config = {\r\n            url: 'http://localhost:3000/signin',\r\n            handleCodeInApp: true,\r\n        };\r\n\r\n        await auth.sendPasswordResetEmail(email, config)\r\n        .then(() => {\r\n            setEmail('');\r\n            setLoading(false);\r\n            alert('Please check your email for password reset link');\r\n        })\r\n        .catch((e) => {\r\n            setLoading(false);\r\n            alert(e.message);\r\n            console.log('ERROR MESSAGE IN FORGOT PASSWORD ERROR', e);\r\n        });\r\n    };\r\n\r\n    return (\r\n        <div className=\"forgot-password-page\">\r\n            {loading ? (\r\n                <h2 className='text-danger'>Loading</h2>\r\n            ) : (\r\n                <React.Fragment>\r\n                    <h2>Forgot Passowrd ? </h2>\r\n                    <span>Enter your email address to reset password</span>\r\n                </React.Fragment>\r\n            )}\r\n\r\n            <form onSubmit={handleSubmit}>\r\n\r\n                <FormInput\r\n                    name=\"email\"\r\n                    type=\"email\"\r\n                    value={email}\r\n                    handleChange={e => setEmail(e.target.value)}\r\n                    label='Email'\r\n                    required\r\n                />\r\n\r\n                \r\n                <br />\r\n                <button className=\"btn btn-raised\" disabled={!email}>\r\n                    Submit\r\n                </button>\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ForgotPasswordPage;\r\n"]},"metadata":{},"sourceType":"module"}