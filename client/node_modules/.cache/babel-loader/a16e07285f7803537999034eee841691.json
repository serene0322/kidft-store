{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\react-course\\\\kidft-store\\\\client\\\\src\\\\components\\\\sign-up\\\\sign-up.component.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport FormInput from \"../form-input/form-input.component\";\nimport CustomButton from \"../custom-button/custom-button.component\";\nimport { signUpStart } from \"../../redux/user/user.actions\";\nimport { toast } from \"react-toastify\";\nimport './sign-up.styles.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SignUp = _ref => {\n  _s();\n\n  let {\n    signUpStart\n  } = _ref;\n  const [userCredentials, setUserCredentials] = useState({\n    displayName: '',\n    email: '',\n    password: '',\n    confirmPassword: ''\n  });\n  const {\n    displayName,\n    email,\n    password,\n    confirmPassword\n  } = userCredentials;\n\n  const handleSubmit = async event => {\n    event.preventDefault(); //check if the password match or not\n\n    if (password !== confirmPassword) {\n      toast.error(\"Password is not match\");\n      return; //don't do anything else if the password not match\n    }\n\n    signUpStart({\n      displayName,\n      email,\n      password\n    });\n  };\n\n  const handleChange = e => {\n    //to pull both the value and name of our event.target\n    const {\n      name,\n      value\n    } = e.target;\n    setUserCredentials({ ...userCredentials,\n      [name]: value\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"sign-up\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"title\",\n      children: \"I do not have an account\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      children: \" Sign up with your email and password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"sign-up-form\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(FormInput, {\n        type: \"text\",\n        name: \"displayName\",\n        value: displayName,\n        onChange: handleChange,\n        label: \"Display Name\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n        type: \"email\",\n        name: \"email\",\n        value: email,\n        onChange: handleChange,\n        label: \"Email\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n        type: \"password\",\n        name: \"password\",\n        value: password,\n        onChange: handleChange,\n        label: \"Password\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n        type: \"password\",\n        name: \"confirmPassword\",\n        value: confirmPassword,\n        onChange: handleChange,\n        label: \"Confirm Password\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(CustomButton, {\n        type: \"submit\",\n        children: \"Sign Up\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 9\n  }, this);\n};\n\n_s(SignUp, \"3iisUMQZ6ptS0j1rUW56m9+jFVo=\");\n\n_c = SignUp;\n\nconst mapDispatchToProps = dispatch => ({\n  signUpStart: userCredentials => dispatch(signUpStart(userCredentials))\n});\n\nexport default connect(null, mapDispatchToProps)(SignUp);\n\nvar _c;\n\n$RefreshReg$(_c, \"SignUp\");","map":{"version":3,"sources":["C:/Users/user/Desktop/react-course/kidft-store/client/src/components/sign-up/sign-up.component.jsx"],"names":["React","useState","connect","FormInput","CustomButton","signUpStart","toast","SignUp","userCredentials","setUserCredentials","displayName","email","password","confirmPassword","handleSubmit","event","preventDefault","error","handleChange","e","name","value","target","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport FormInput from \"../form-input/form-input.component\";\r\nimport CustomButton from \"../custom-button/custom-button.component\";\r\n\r\nimport { signUpStart } from \"../../redux/user/user.actions\";\r\n\r\nimport { toast } from \"react-toastify\";\r\n\r\nimport './sign-up.styles.scss';\r\n\r\nconst SignUp = ({ signUpStart }) => {\r\n\r\n    const[userCredentials, setUserCredentials] = useState({\r\n        displayName: '',\r\n        email: '',\r\n        password: '',\r\n        confirmPassword: ''\r\n    });\r\n\r\n    const { displayName, email, password, confirmPassword } = userCredentials;\r\n\r\n    const handleSubmit = async event => {\r\n        event.preventDefault();\r\n\r\n        //check if the password match or not\r\n        if (password !== confirmPassword) {\r\n            toast.error(\"Password is not match\");\r\n            return; //don't do anything else if the password not match\r\n        }\r\n\r\n        signUpStart({ displayName, email, password });\r\n    };\r\n\r\n    const handleChange = (e) => {\r\n        //to pull both the value and name of our event.target\r\n        const { name, value } = e.target;\r\n\r\n        setUserCredentials({ ...userCredentials, [name]: value });\r\n    };\r\n\r\n    return (\r\n        <div className='sign-up'>\r\n            <h2 className='title'>I do not have an account</h2>\r\n            <span> Sign up with your email and password</span>\r\n            <form className='sign-up-form' onSubmit={handleSubmit}>\r\n                <FormInput\r\n                    type='text'\r\n                    name='displayName'\r\n                    value={displayName}\r\n                    onChange={handleChange}\r\n                    label='Display Name'\r\n                    required\r\n                />\r\n                <FormInput\r\n                    type='email'\r\n                    name='email'\r\n                    value={email}\r\n                    onChange={handleChange}\r\n                    label='Email'\r\n                    required\r\n                />\r\n                <FormInput\r\n                    type='password'\r\n                    name='password'\r\n                    value={password}\r\n                    onChange={handleChange}\r\n                    label='Password'\r\n                    required\r\n                />\r\n                <FormInput\r\n                    type='password'\r\n                    name='confirmPassword'\r\n                    value={confirmPassword}\r\n                    onChange={handleChange}\r\n                    label='Confirm Password'\r\n                    required\r\n                />\r\n                <CustomButton type='submit'>Sign Up</CustomButton>\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    signUpStart: userCredentials => dispatch(signUpStart(userCredentials))\r\n});\r\n\r\nexport default connect(null, mapDispatchToProps)(SignUp);"]},"metadata":{},"sourceType":"module"}