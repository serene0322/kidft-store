{"ast":null,"code":"import { takeLatest, call, put, all } from 'redux-saga/effects';\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils';\nimport { handleFetchProduct } from './shop.helpers';\nimport { fetchCollectionsSuccess, fetchCollectionsFailure, setProduct } from './shop.actions';\nimport ShopActionTypes from './shop.types';\nexport function* fetchCollectionsAsync() {\n  try {\n    const collectionRef = firestore.collection('collections');\n    const snapshot = yield collectionRef.get();\n    const collectionsMap = yield call(convertCollectionsSnapshotToMap, snapshot);\n    yield put(fetchCollectionsSuccess(collectionsMap));\n  } catch (error) {\n    yield put(fetchCollectionsFailure(error.message));\n  }\n}\nexport function* fetchCollectionsStart() {\n  yield takeLatest(ShopActionTypes.FETCH_COLLECTIONS_START, fetchCollectionsAsync);\n}\nexport function* fetchProduct({\n  payload\n}) {\n  try {\n    const product = yield handleFetchProduct(payload);\n    yield put(setProduct(product));\n  } catch (error) {//console.log(error);\n  }\n}\nexport function* onFetchProductStart() {\n  yield takeLatest(ShopActionTypes.FETCH_PRODUCT_START, fetchProduct);\n}\nexport function* shopSagas() {\n  yield all([call(fetchCollectionsStart), call(onFetchProductStart)]);\n}","map":{"version":3,"sources":["C:/Users/user/Desktop/react-course/kidft-store/src/redux/shop/shop.sagas.js"],"names":["takeLatest","call","put","all","firestore","convertCollectionsSnapshotToMap","handleFetchProduct","fetchCollectionsSuccess","fetchCollectionsFailure","setProduct","ShopActionTypes","fetchCollectionsAsync","collectionRef","collection","snapshot","get","collectionsMap","error","message","fetchCollectionsStart","FETCH_COLLECTIONS_START","fetchProduct","payload","product","onFetchProductStart","FETCH_PRODUCT_START","shopSagas"],"mappings":"AAAA,SAASA,UAAT,EAAqBC,IAArB,EAA2BC,GAA3B,EAAgCC,GAAhC,QAA2C,oBAA3C;AAEA,SAASC,SAAT,EAAoBC,+BAApB,QAA2D,+BAA3D;AAEA,SAASC,kBAAT,QAAmC,gBAAnC;AAEA,SACIC,uBADJ,EAEIC,uBAFJ,EAGIC,UAHJ,QAIO,gBAJP;AAMA,OAAOC,eAAP,MAA4B,cAA5B;AAEA,OAAO,UAAUC,qBAAV,GAAkC;AACrC,MAAI;AACA,UAAMC,aAAa,GAAGR,SAAS,CAACS,UAAV,CAAqB,aAArB,CAAtB;AACA,UAAMC,QAAQ,GAAG,MAAMF,aAAa,CAACG,GAAd,EAAvB;AACA,UAAMC,cAAc,GAAG,MAAMf,IAAI,CAC7BI,+BAD6B,EAE7BS,QAF6B,CAAjC;AAIA,UAAMZ,GAAG,CAACK,uBAAuB,CAACS,cAAD,CAAxB,CAAT;AACH,GARD,CAQE,OAAOC,KAAP,EAAc;AACZ,UAAMf,GAAG,CAACM,uBAAuB,CAACS,KAAK,CAACC,OAAP,CAAxB,CAAT;AACH;AACJ;AAED,OAAO,UAAUC,qBAAV,GAAkC;AACrC,QAAMnB,UAAU,CACZU,eAAe,CAACU,uBADJ,EAEZT,qBAFY,CAAhB;AAIH;AAED,OAAO,UAAUU,YAAV,CAAuB;AAAEC,EAAAA;AAAF,CAAvB,EAAoC;AACvC,MAAI;AACA,UAAMC,OAAO,GAAG,MAAMjB,kBAAkB,CAACgB,OAAD,CAAxC;AACA,UAAMpB,GAAG,CACLO,UAAU,CAACc,OAAD,CADL,CAAT;AAGH,GALD,CAKE,OAAON,KAAP,EAAc,CACZ;AACH;AACJ;AAED,OAAO,UAAUO,mBAAV,GAAgC;AACnC,QAAMxB,UAAU,CACZU,eAAe,CAACe,mBADJ,EAEZJ,YAFY,CAAhB;AAIH;AAED,OAAO,UAAUK,SAAV,GAAsB;AACzB,QAAMvB,GAAG,CAAC,CACNF,IAAI,CAACkB,qBAAD,CADE,EAENlB,IAAI,CAACuB,mBAAD,CAFE,CAAD,CAAT;AAIH","sourcesContent":["import { takeLatest, call, put, all } from 'redux-saga/effects';\r\n\r\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils';\r\n\r\nimport { handleFetchProduct } from './shop.helpers';\r\n\r\nimport {\r\n    fetchCollectionsSuccess,\r\n    fetchCollectionsFailure,\r\n    setProduct\r\n} from './shop.actions'\r\n\r\nimport ShopActionTypes from './shop.types';\r\n\r\nexport function* fetchCollectionsAsync() {\r\n    try {\r\n        const collectionRef = firestore.collection('collections');\r\n        const snapshot = yield collectionRef.get();\r\n        const collectionsMap = yield call(\r\n            convertCollectionsSnapshotToMap,\r\n            snapshot\r\n        );\r\n        yield put(fetchCollectionsSuccess(collectionsMap));\r\n    } catch (error) {\r\n        yield put(fetchCollectionsFailure(error.message));\r\n    }\r\n}\r\n\r\nexport function* fetchCollectionsStart() {\r\n    yield takeLatest(\r\n        ShopActionTypes.FETCH_COLLECTIONS_START,\r\n        fetchCollectionsAsync\r\n    );\r\n}\r\n\r\nexport function* fetchProduct({ payload }) {\r\n    try {\r\n        const product = yield handleFetchProduct(payload);\r\n        yield put(\r\n            setProduct(product)\r\n        );\r\n    } catch (error) {\r\n        //console.log(error);\r\n    }\r\n}\r\n\r\nexport function* onFetchProductStart() {\r\n    yield takeLatest(\r\n        ShopActionTypes.FETCH_PRODUCT_START,\r\n        fetchProduct\r\n    );\r\n}\r\n\r\nexport function* shopSagas() {\r\n    yield all([\r\n        call(fetchCollectionsStart),\r\n        call(onFetchProductStart)\r\n    ]);\r\n}"]},"metadata":{},"sourceType":"module"}