{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\react-course\\\\kidft-store\\\\src\\\\components\\\\options\\\\Options.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useContext, useEffect, useRef } from \"react\";\nimport { Input, Button, Tooltip, Modal, message } from \"antd\";\nimport Phone from \"../../assets/phone.gif\";\nimport Teams from \"../../assets/teams.mp3\";\nimport * as classes from \"./Options.module.css\";\nimport { CopyToClipboard } from \"react-copy-to-clipboard\";\nimport VideoContext from \"../../context/VideoContext\";\nimport Hang from \"../../assets/hang.svg\";\nimport { UserOutlined, CopyOutlined, InfoCircleOutlined, PhoneOutlined } from \"@ant-design/icons\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Options = () => {\n  _s();\n\n  const [idToCall, setIdToCall] = useState(\"\"); //let us use state in functional component\n\n  const [isModalVisible, setIsModalVisible] = useState(false);\n  const Audio = useRef();\n  const {\n    call,\n    callAccepted,\n    name,\n    setName,\n    callEnded,\n    me,\n    callUser,\n    leaveCall,\n    answerCall,\n    setOtherUser,\n    leaveCall1\n  } = useContext(VideoContext);\n  useEffect(() => {\n    var _Audio$current2;\n\n    if (isModalVisible) {\n      var _Audio$current;\n\n      Audio === null || Audio === void 0 ? void 0 : (_Audio$current = Audio.current) === null || _Audio$current === void 0 ? void 0 : _Audio$current.play();\n    } else Audio === null || Audio === void 0 ? void 0 : (_Audio$current2 = Audio.current) === null || _Audio$current2 === void 0 ? void 0 : _Audio$current2.pause();\n  }, [isModalVisible]);\n\n  const showModal = showVal => {\n    setIsModalVisible(showVal);\n  };\n\n  const handleCancel = () => {\n    setIsModalVisible(false);\n    leaveCall1();\n    window.location.reload();\n  };\n\n  useEffect(() => {\n    if (call.isReceivingCall && !callAccepted) {\n      setIsModalVisible(true);\n      setOtherUser(call.from);\n    } else setIsModalVisible(false);\n  }, [call.isReceivingCall]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.options,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: \"0.5rem\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Account Info\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        size: \"large\",\n        placeholder: \"Your name\",\n        prefix: /*#__PURE__*/_jsxDEV(UserOutlined, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 19\n        }, this),\n        maxLength: 15,\n        suffix: /*#__PURE__*/_jsxDEV(\"small\", {\n          children: [name.length, \"/15\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 19\n        }, this),\n        value: name,\n        onChange: e => {\n          setName(e.target.value);\n          localStorage.setItem(\"name\", e.target.value);\n        },\n        className: classes.inputgroup\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.share_options,\n        children: /*#__PURE__*/_jsxDEV(CopyToClipboard, {\n          text: me,\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            type: \"primary\",\n            icon: /*#__PURE__*/_jsxDEV(CopyOutlined, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 21\n            }, this),\n            className: classes.btn,\n            tabIndex: \"0\",\n            onClick: () => message.success(\"Code copied successfully!\"),\n            children: \"Copy code\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: \"0.5rem\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Make a call\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        placeholder: \"Enter code to call\",\n        size: \"large\",\n        className: classes.inputgroup,\n        value: idToCall,\n        onChange: e => setIdToCall(e.target.value),\n        style: {\n          marginRight: \"0.5rem\",\n          marginBottom: \"0.5rem\"\n        },\n        prefix: /*#__PURE__*/_jsxDEV(UserOutlined, {\n          className: \"site-form-item-icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 19\n        }, this),\n        suffix: /*#__PURE__*/_jsxDEV(Tooltip, {\n          title: \"Enter code of the other user\",\n          children: /*#__PURE__*/_jsxDEV(InfoCircleOutlined, {\n            style: {\n              color: \"rgba(0,0,0,.45)\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this), callAccepted && !callEnded ? /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        onClick: leaveCall,\n        className: classes.hang,\n        tabIndex: \"0\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: Hang,\n          alt: \"hang up\",\n          style: {\n            height: \"15px\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 13\n        }, this), \"\\xA0 Hang up\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(Button, {\n        type: \"primary\",\n        icon: /*#__PURE__*/_jsxDEV(PhoneOutlined, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 19\n        }, this),\n        onClick: () => {\n          if (name.length) callUser(idToCall);else message.error(\"Please enter your name to call!\");\n        },\n        className: classes.btn,\n        tabIndex: \"0\",\n        children: \"Call\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), call.isReceivingCall && !callAccepted && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"audio\", {\n        src: Teams,\n        loop: true,\n        ref: Audio\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Modal, {\n        title: \"Incoming Call\",\n        visible: isModalVisible,\n        onOk: () => showModal(false),\n        onCancel: handleCancel,\n        footer: null,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: \"flex\",\n            justifyContent: \"space-around\"\n          },\n          children: /*#__PURE__*/_jsxDEV(\"h1\", {\n            children: [call.name, \" is calling you:\", \" \", /*#__PURE__*/_jsxDEV(\"img\", {\n              src: Phone,\n              alt: \"phone ringing\",\n              className: classes.phone,\n              style: {\n                display: \"inline-block\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 146,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.btnDiv,\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            className: classes.answer,\n            color: \"#29bb89\",\n            icon: /*#__PURE__*/_jsxDEV(PhoneOutlined, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 159,\n              columnNumber: 23\n            }, this),\n            onClick: () => {\n              answerCall();\n              Audio.current.pause();\n            },\n            tabIndex: \"0\",\n            children: \"Answer\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            className: classes.decline,\n            icon: /*#__PURE__*/_jsxDEV(PhoneOutlined, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 171,\n              columnNumber: 23\n            }, this),\n            onClick: () => {\n              setIsModalVisible(false);\n              Audio.current.pause();\n            },\n            tabIndex: \"0\",\n            children: \"Decline\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Options, \"J8M0wC5orRwx8k7FZVsVatr46xI=\");\n\n_c = Options;\nexport default Options;\n\nvar _c;\n\n$RefreshReg$(_c, \"Options\");","map":{"version":3,"sources":["C:/Users/user/Desktop/react-course/kidft-store/src/components/options/Options.js"],"names":["React","useState","useContext","useEffect","useRef","Input","Button","Tooltip","Modal","message","Phone","Teams","classes","CopyToClipboard","VideoContext","UserOutlined","CopyOutlined","InfoCircleOutlined","PhoneOutlined","Options","idToCall","setIdToCall","isModalVisible","setIsModalVisible","Audio","call","callAccepted","name","setName","callEnded","me","callUser","leaveCall","answerCall","setOtherUser","leaveCall1","current","play","pause","showModal","showVal","handleCancel","window","location","reload","isReceivingCall","from","options","marginBottom","length","e","target","value","localStorage","setItem","inputgroup","share_options","btn","success","marginRight","color","hang","Hang","height","error","display","justifyContent","phone","btnDiv","answer","decline"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,UAA1B,EAAsCC,SAAtC,EAAiDC,MAAjD,QAA+D,OAA/D;AACA,SAASC,KAAT,EAAgBC,MAAhB,EAAwBC,OAAxB,EAAiCC,KAAjC,EAAwCC,OAAxC,QAAuD,MAAvD;AACA,OAAOC,KAAP,MAAkB,wBAAlB;AACA,OAAOC,KAAP,MAAkB,wBAAlB;AACA,OAAO,KAAKC,OAAZ,MAAyB,sBAAzB;AACA,SAASC,eAAT,QAAgC,yBAAhC;AACA,OAAOC,YAAP,MAAyB,4BAAzB;;AAEA,SACEC,YADF,EAEEC,YAFF,EAGEC,kBAHF,EAIEC,aAJF,QAKO,mBALP;;;;AAOA,MAAMC,OAAO,GAAG,MAAM;AAAA;;AACpB,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BpB,QAAQ,CAAC,EAAD,CAAxC,CADoB,CAC0B;;AAE9C,QAAM,CAACqB,cAAD,EAAiBC,iBAAjB,IAAsCtB,QAAQ,CAAC,KAAD,CAApD;AACA,QAAMuB,KAAK,GAAGpB,MAAM,EAApB;AACA,QAAM;AACJqB,IAAAA,IADI;AAEJC,IAAAA,YAFI;AAGJC,IAAAA,IAHI;AAIJC,IAAAA,OAJI;AAKJC,IAAAA,SALI;AAMJC,IAAAA,EANI;AAOJC,IAAAA,QAPI;AAQJC,IAAAA,SARI;AASJC,IAAAA,UATI;AAUJC,IAAAA,YAVI;AAWJC,IAAAA;AAXI,MAYFjC,UAAU,CAACY,YAAD,CAZd;AAcAX,EAAAA,SAAS,CAAC,MAAM;AAAA;;AACd,QAAImB,cAAJ,EAAoB;AAAA;;AAClBE,MAAAA,KAAK,SAAL,IAAAA,KAAK,WAAL,8BAAAA,KAAK,CAAEY,OAAP,kEAAgBC,IAAhB;AACD,KAFD,MAEOb,KAAK,SAAL,IAAAA,KAAK,WAAL,+BAAAA,KAAK,CAAEY,OAAP,oEAAgBE,KAAhB;AACR,GAJQ,EAIN,CAAChB,cAAD,CAJM,CAAT;;AAMA,QAAMiB,SAAS,GAAIC,OAAD,IAAa;AAC7BjB,IAAAA,iBAAiB,CAACiB,OAAD,CAAjB;AACD,GAFD;;AAIA,QAAMC,YAAY,GAAG,MAAM;AACzBlB,IAAAA,iBAAiB,CAAC,KAAD,CAAjB;AACAY,IAAAA,UAAU;AACVO,IAAAA,MAAM,CAACC,QAAP,CAAgBC,MAAhB;AACD,GAJD;;AAKAzC,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIsB,IAAI,CAACoB,eAAL,IAAwB,CAACnB,YAA7B,EAA2C;AACzCH,MAAAA,iBAAiB,CAAC,IAAD,CAAjB;AACAW,MAAAA,YAAY,CAACT,IAAI,CAACqB,IAAN,CAAZ;AACD,KAHD,MAGOvB,iBAAiB,CAAC,KAAD,CAAjB;AACR,GALQ,EAKN,CAACE,IAAI,CAACoB,eAAN,CALM,CAAT;AAOA,sBACE;AAAK,IAAA,SAAS,EAAEjC,OAAO,CAACmC,OAAxB;AAAA,4BACE;AAAK,MAAA,KAAK,EAAE;AAAEC,QAAAA,YAAY,EAAE;AAAhB,OAAZ;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,KAAD;AACE,QAAA,IAAI,EAAC,OADP;AAEE,QAAA,WAAW,EAAC,WAFd;AAGE,QAAA,MAAM,eAAE,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA,gBAHV;AAIE,QAAA,SAAS,EAAE,EAJb;AAKE,QAAA,MAAM,eAAE;AAAA,qBAAQrB,IAAI,CAACsB,MAAb;AAAA;AAAA;AAAA;AAAA;AAAA,gBALV;AAME,QAAA,KAAK,EAAEtB,IANT;AAOE,QAAA,QAAQ,EAAGuB,CAAD,IAAO;AACftB,UAAAA,OAAO,CAACsB,CAAC,CAACC,MAAF,CAASC,KAAV,CAAP;AACAC,UAAAA,YAAY,CAACC,OAAb,CAAqB,MAArB,EAA6BJ,CAAC,CAACC,MAAF,CAASC,KAAtC;AACD,SAVH;AAWE,QAAA,SAAS,EAAExC,OAAO,CAAC2C;AAXrB;AAAA;AAAA;AAAA;AAAA,cAFF,eAgBE;AAAK,QAAA,SAAS,EAAE3C,OAAO,CAAC4C,aAAxB;AAAA,+BACE,QAAC,eAAD;AAAiB,UAAA,IAAI,EAAE1B,EAAvB;AAAA,iCACE,QAAC,MAAD;AACE,YAAA,IAAI,EAAC,SADP;AAEE,YAAA,IAAI,eAAE,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA,oBAFR;AAGE,YAAA,SAAS,EAAElB,OAAO,CAAC6C,GAHrB;AAIE,YAAA,QAAQ,EAAC,GAJX;AAKE,YAAA,OAAO,EAAE,MAAMhD,OAAO,CAACiD,OAAR,CAAgB,2BAAhB,CALjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAhBF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eA+BE;AAAK,MAAA,KAAK,EAAE;AAAEV,QAAAA,YAAY,EAAE;AAAhB,OAAZ;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAGE,QAAC,KAAD;AACE,QAAA,WAAW,EAAC,oBADd;AAEE,QAAA,IAAI,EAAC,OAFP;AAGE,QAAA,SAAS,EAAEpC,OAAO,CAAC2C,UAHrB;AAIE,QAAA,KAAK,EAAEnC,QAJT;AAKE,QAAA,QAAQ,EAAG8B,CAAD,IAAO7B,WAAW,CAAC6B,CAAC,CAACC,MAAF,CAASC,KAAV,CAL9B;AAME,QAAA,KAAK,EAAE;AAAEO,UAAAA,WAAW,EAAE,QAAf;AAAyBX,UAAAA,YAAY,EAAE;AAAvC,SANT;AAOE,QAAA,MAAM,eAAE,QAAC,YAAD;AAAc,UAAA,SAAS,EAAC;AAAxB;AAAA;AAAA;AAAA;AAAA,gBAPV;AAQE,QAAA,MAAM,eACJ,QAAC,OAAD;AAAS,UAAA,KAAK,EAAC,8BAAf;AAAA,iCACE,QAAC,kBAAD;AAAoB,YAAA,KAAK,EAAE;AAAEY,cAAAA,KAAK,EAAE;AAAT;AAA3B;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AATJ;AAAA;AAAA;AAAA;AAAA,cAHF,EAkBGlC,YAAY,IAAI,CAACG,SAAjB,gBACC,QAAC,MAAD;AACE,QAAA,OAAO,EAAC,WADV;AAEE,QAAA,OAAO,EAAEG,SAFX;AAGE,QAAA,SAAS,EAAEpB,OAAO,CAACiD,IAHrB;AAIE,QAAA,QAAQ,EAAC,GAJX;AAAA,gCAME;AAAK,UAAA,GAAG,EAAEC,IAAV;AAAgB,UAAA,GAAG,EAAC,SAApB;AAA8B,UAAA,KAAK,EAAE;AAAEC,YAAAA,MAAM,EAAE;AAAV;AAArC;AAAA;AAAA;AAAA;AAAA,gBANF;AAAA;AAAA;AAAA;AAAA;AAAA,cADD,gBAWC,QAAC,MAAD;AACE,QAAA,IAAI,EAAC,SADP;AAEE,QAAA,IAAI,eAAE,QAAC,aAAD;AAAA;AAAA;AAAA;AAAA,gBAFR;AAGE,QAAA,OAAO,EAAE,MAAM;AACb,cAAIpC,IAAI,CAACsB,MAAT,EAAiBlB,QAAQ,CAACX,QAAD,CAAR,CAAjB,KACKX,OAAO,CAACuD,KAAR,CAAc,iCAAd;AACN,SANH;AAOE,QAAA,SAAS,EAAEpD,OAAO,CAAC6C,GAPrB;AAQE,QAAA,QAAQ,EAAC,GARX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cA7BJ;AAAA;AAAA;AAAA;AAAA;AAAA,YA/BF,EA2EGhC,IAAI,CAACoB,eAAL,IAAwB,CAACnB,YAAzB,iBACC;AAAA,8BACE;AAAO,QAAA,GAAG,EAAEf,KAAZ;AAAmB,QAAA,IAAI,MAAvB;AAAwB,QAAA,GAAG,EAAEa;AAA7B;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,KAAD;AACE,QAAA,KAAK,EAAC,eADR;AAEE,QAAA,OAAO,EAAEF,cAFX;AAGE,QAAA,IAAI,EAAE,MAAMiB,SAAS,CAAC,KAAD,CAHvB;AAIE,QAAA,QAAQ,EAAEE,YAJZ;AAKE,QAAA,MAAM,EAAE,IALV;AAAA,gCAOE;AAAK,UAAA,KAAK,EAAE;AAAEwB,YAAAA,OAAO,EAAE,MAAX;AAAmBC,YAAAA,cAAc,EAAE;AAAnC,WAAZ;AAAA,iCACE;AAAA,uBACGzC,IAAI,CAACE,IADR,sBAC8B,GAD9B,eAEE;AACE,cAAA,GAAG,EAAEjB,KADP;AAEE,cAAA,GAAG,EAAC,eAFN;AAGE,cAAA,SAAS,EAAEE,OAAO,CAACuD,KAHrB;AAIE,cAAA,KAAK,EAAE;AAAEF,gBAAAA,OAAO,EAAE;AAAX;AAJT;AAAA;AAAA;AAAA;AAAA,oBAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAPF,eAkBE;AAAK,UAAA,SAAS,EAAErD,OAAO,CAACwD,MAAxB;AAAA,kCACE,QAAC,MAAD;AACE,YAAA,OAAO,EAAC,WADV;AAEE,YAAA,SAAS,EAAExD,OAAO,CAACyD,MAFrB;AAGE,YAAA,KAAK,EAAC,SAHR;AAIE,YAAA,IAAI,eAAE,QAAC,aAAD;AAAA;AAAA;AAAA;AAAA,oBAJR;AAKE,YAAA,OAAO,EAAE,MAAM;AACbpC,cAAAA,UAAU;AACVT,cAAAA,KAAK,CAACY,OAAN,CAAcE,KAAd;AACD,aARH;AASE,YAAA,QAAQ,EAAC,GATX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAcE,QAAC,MAAD;AACE,YAAA,OAAO,EAAC,WADV;AAEE,YAAA,SAAS,EAAE1B,OAAO,CAAC0D,OAFrB;AAGE,YAAA,IAAI,eAAE,QAAC,aAAD;AAAA;AAAA;AAAA;AAAA,oBAHR;AAIE,YAAA,OAAO,EAAE,MAAM;AACb/C,cAAAA,iBAAiB,CAAC,KAAD,CAAjB;AACAC,cAAAA,KAAK,CAACY,OAAN,CAAcE,KAAd;AACD,aAPH;AAQE,YAAA,QAAQ,EAAC,GARX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAdF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAlBF;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA,oBA5EJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAiID,CA1KD;;GAAMnB,O;;KAAAA,O;AA4KN,eAAeA,OAAf","sourcesContent":["import React, { useState, useContext, useEffect, useRef } from \"react\";\r\nimport { Input, Button, Tooltip, Modal, message } from \"antd\";\r\nimport Phone from \"../../assets/phone.gif\";\r\nimport Teams from \"../../assets/teams.mp3\";\r\nimport * as classes from \"./Options.module.css\";\r\nimport { CopyToClipboard } from \"react-copy-to-clipboard\";\r\nimport VideoContext from \"../../context/VideoContext\";\r\nimport Hang from \"../../assets/hang.svg\";\r\nimport {\r\n  UserOutlined,\r\n  CopyOutlined,\r\n  InfoCircleOutlined,\r\n  PhoneOutlined,\r\n} from \"@ant-design/icons\";\r\n\r\nconst Options = () => {\r\n  const [idToCall, setIdToCall] = useState(\"\"); //let us use state in functional component\r\n\r\n  const [isModalVisible, setIsModalVisible] = useState(false);\r\n  const Audio = useRef();\r\n  const {\r\n    call,\r\n    callAccepted,\r\n    name,\r\n    setName,\r\n    callEnded,\r\n    me,\r\n    callUser,\r\n    leaveCall,\r\n    answerCall,\r\n    setOtherUser,\r\n    leaveCall1,\r\n  } = useContext(VideoContext);\r\n\r\n  useEffect(() => {\r\n    if (isModalVisible) {\r\n      Audio?.current?.play();\r\n    } else Audio?.current?.pause();\r\n  }, [isModalVisible]);\r\n\r\n  const showModal = (showVal) => {\r\n    setIsModalVisible(showVal);\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    setIsModalVisible(false);\r\n    leaveCall1();\r\n    window.location.reload();\r\n  };\r\n  useEffect(() => {\r\n    if (call.isReceivingCall && !callAccepted) {\r\n      setIsModalVisible(true);\r\n      setOtherUser(call.from);\r\n    } else setIsModalVisible(false);\r\n  }, [call.isReceivingCall]);\r\n\r\n  return (\r\n    <div className={classes.options}>\r\n      <div style={{ marginBottom: \"0.5rem\" }}>\r\n        <h2>Account Info</h2>\r\n        <Input\r\n          size=\"large\"\r\n          placeholder=\"Your name\"\r\n          prefix={<UserOutlined />}\r\n          maxLength={15}\r\n          suffix={<small>{name.length}/15</small>}\r\n          value={name}\r\n          onChange={(e) => {\r\n            setName(e.target.value);\r\n            localStorage.setItem(\"name\", e.target.value);\r\n          }}\r\n          className={classes.inputgroup}\r\n        />\r\n\r\n        <div className={classes.share_options}>\r\n          <CopyToClipboard text={me}>\r\n            <Button\r\n              type=\"primary\"\r\n              icon={<CopyOutlined />}\r\n              className={classes.btn}\r\n              tabIndex=\"0\"\r\n              onClick={() => message.success(\"Code copied successfully!\")}\r\n            >\r\n              Copy code\r\n            </Button>\r\n          </CopyToClipboard>\r\n        </div>\r\n      </div>\r\n      <div style={{ marginBottom: \"0.5rem\" }}>\r\n        <h2>Make a call</h2>\r\n\r\n        <Input\r\n          placeholder=\"Enter code to call\"\r\n          size=\"large\"\r\n          className={classes.inputgroup}\r\n          value={idToCall}\r\n          onChange={(e) => setIdToCall(e.target.value)}\r\n          style={{ marginRight: \"0.5rem\", marginBottom: \"0.5rem\" }}\r\n          prefix={<UserOutlined className=\"site-form-item-icon\" />}\r\n          suffix={\r\n            <Tooltip title=\"Enter code of the other user\">\r\n              <InfoCircleOutlined style={{ color: \"rgba(0,0,0,.45)\" }} />\r\n            </Tooltip>\r\n          }\r\n        />\r\n\r\n        {callAccepted && !callEnded ? (\r\n          <Button\r\n            variant=\"contained\"\r\n            onClick={leaveCall}\r\n            className={classes.hang}\r\n            tabIndex=\"0\"\r\n          >\r\n            <img src={Hang} alt=\"hang up\" style={{ height: \"15px\" }} />\r\n            &nbsp; Hang up\r\n          </Button>\r\n        ) : (\r\n          <Button\r\n            type=\"primary\"\r\n            icon={<PhoneOutlined />}\r\n            onClick={() => {\r\n              if (name.length) callUser(idToCall);\r\n              else message.error(\"Please enter your name to call!\");\r\n            }}\r\n            className={classes.btn}\r\n            tabIndex=\"0\"\r\n          >\r\n            Call\r\n          </Button>\r\n        )}\r\n      </div>\r\n\r\n      {call.isReceivingCall && !callAccepted && (\r\n        <>\r\n          <audio src={Teams} loop ref={Audio} />\r\n          <Modal\r\n            title=\"Incoming Call\"\r\n            visible={isModalVisible}\r\n            onOk={() => showModal(false)}\r\n            onCancel={handleCancel}\r\n            footer={null}\r\n          >\r\n            <div style={{ display: \"flex\", justifyContent: \"space-around\" }}>\r\n              <h1>\r\n                {call.name} is calling you:{\" \"}\r\n                <img\r\n                  src={Phone}\r\n                  alt=\"phone ringing\"\r\n                  className={classes.phone}\r\n                  style={{ display: \"inline-block\" }}\r\n                />\r\n              </h1>\r\n            </div>\r\n            <div className={classes.btnDiv}>\r\n              <Button\r\n                variant=\"contained\"\r\n                className={classes.answer}\r\n                color=\"#29bb89\"\r\n                icon={<PhoneOutlined />}\r\n                onClick={() => {\r\n                  answerCall();\r\n                  Audio.current.pause();\r\n                }}\r\n                tabIndex=\"0\"\r\n              >\r\n                Answer\r\n              </Button>\r\n              <Button\r\n                variant=\"contained\"\r\n                className={classes.decline}\r\n                icon={<PhoneOutlined />}\r\n                onClick={() => {\r\n                  setIsModalVisible(false);\r\n                  Audio.current.pause();\r\n                }}\r\n                tabIndex=\"0\"\r\n              >\r\n                Decline\r\n              </Button>\r\n            </div>\r\n          </Modal>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Options;"]},"metadata":{},"sourceType":"module"}