{"ast":null,"code":"import ShopActionTypes from './shop.types';\nconst INITIAL_STATE = {\n  collections: null,\n  isFetching: false,\n  //to know the data fetched success or not\n  errorMessage: undefined,\n  product: {}\n}; //reducer listening for the backend update to store the actual collections value\n\nconst shopReducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case ShopActionTypes.FETCH_COLLECTIONS_START:\n      return { ...state,\n        isFetching: true\n      };\n\n    case ShopActionTypes.FETCH_COLLECTIONS_SUCCESS:\n      return { ...state,\n        isFetching: false,\n        collections: action.payload\n      };\n\n    case ShopActionTypes.FETCH_COLLECTIONS_FAILURE:\n      return { ...state,\n        isFetching: false,\n        errorMessage: action.payload\n      };\n\n    case ShopActionTypes.SET_PRODUCT:\n      return { ...state,\n        product: action.payload\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default shopReducer;","map":{"version":3,"sources":["C:/Users/user/Desktop/react-course/kidft-store/src/redux/shop/shop.reducer.js"],"names":["ShopActionTypes","INITIAL_STATE","collections","isFetching","errorMessage","undefined","product","shopReducer","state","action","type","FETCH_COLLECTIONS_START","FETCH_COLLECTIONS_SUCCESS","payload","FETCH_COLLECTIONS_FAILURE","SET_PRODUCT"],"mappings":"AAAA,OAAOA,eAAP,MAA4B,cAA5B;AAEA,MAAMC,aAAa,GAAG;AAClBC,EAAAA,WAAW,EAAE,IADK;AAElBC,EAAAA,UAAU,EAAE,KAFM;AAEE;AACpBC,EAAAA,YAAY,EAAEC,SAHI;AAIlBC,EAAAA,OAAO,EAAE;AAJS,CAAtB,C,CAOA;;AACA,MAAMC,WAAW,GAAG,CAACC,KAAK,GAAGP,aAAT,EAAwBQ,MAAxB,KAAmC;AACnD,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKV,eAAe,CAACW,uBAArB;AACI,aAAO,EACH,GAAGH,KADA;AAEHL,QAAAA,UAAU,EAAE;AAFT,OAAP;;AAIJ,SAAKH,eAAe,CAACY,yBAArB;AACI,aAAO,EACH,GAAGJ,KADA;AAEHL,QAAAA,UAAU,EAAE,KAFT;AAGHD,QAAAA,WAAW,EAAEO,MAAM,CAACI;AAHjB,OAAP;;AAKJ,SAAKb,eAAe,CAACc,yBAArB;AACI,aAAO,EACH,GAAGN,KADA;AAEHL,QAAAA,UAAU,EAAE,KAFT;AAGHC,QAAAA,YAAY,EAAEK,MAAM,CAACI;AAHlB,OAAP;;AAKJ,SAAKb,eAAe,CAACe,WAArB;AACI,aAAO,EACH,GAAGP,KADA;AAEHF,QAAAA,OAAO,EAAEG,MAAM,CAACI;AAFb,OAAP;;AAIJ;AACI,aAAOL,KAAP;AAxBR;AA0BH,CA3BD;;AA6BA,eAAeD,WAAf","sourcesContent":["import ShopActionTypes from './shop.types';\r\n\r\nconst INITIAL_STATE = {\r\n    collections: null,\r\n    isFetching: false,  //to know the data fetched success or not\r\n    errorMessage: undefined,\r\n    product: {}\r\n};\r\n\r\n//reducer listening for the backend update to store the actual collections value\r\nconst shopReducer = (state = INITIAL_STATE, action) => {\r\n    switch (action.type) {\r\n        case ShopActionTypes.FETCH_COLLECTIONS_START:\r\n            return {\r\n                ...state,\r\n                isFetching: true\r\n            };\r\n        case ShopActionTypes.FETCH_COLLECTIONS_SUCCESS:\r\n            return {\r\n                ...state,\r\n                isFetching: false,\r\n                collections: action.payload\r\n            };\r\n        case ShopActionTypes.FETCH_COLLECTIONS_FAILURE:\r\n            return {\r\n                ...state,\r\n                isFetching: false,\r\n                errorMessage: action.payload\r\n            };\r\n        case ShopActionTypes.SET_PRODUCT:\r\n            return {\r\n                ...state,\r\n                product: action.payload\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default shopReducer;"]},"metadata":{},"sourceType":"module"}