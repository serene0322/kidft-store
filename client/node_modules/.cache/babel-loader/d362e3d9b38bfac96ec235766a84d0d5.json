{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\react-course\\\\kidft-store\\\\src\\\\components\\\\cart-dropdown\\\\cart-dropdown.component.jsx\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { createStructuredSelector } from \"reselect\";\nimport CustomButton from \"../custom-button/custom-button.component\";\nimport CartItem from \"../cart-item/cart-item.component\";\nimport { selectCartItems } from \"../../redux/cart/cart.selectors\";\nimport './cart-dropdown.styles.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CartDropdown = ({\n  cartItems\n}) => /*#__PURE__*/_jsxDEV(\"div\", {\n  className: \"cart-dropdown\",\n  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"cart-items\",\n    children: //if > 0\n    cartItems.length ? cartItems.map(cartItem => /*#__PURE__*/_jsxDEV(CartItem, {\n      item: cartItem\n    }, cartItem.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 25\n    }, this)) //else\n    :\n    /*#__PURE__*/\n    _jsxDEV(\"span\", {\n      className: \"empty-message\",\n      children: \"Your cart is empty.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 25\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 9\n  }, this), /*#__PURE__*/_jsxDEV(CustomButton, {\n    children: \"GO TO CHECKOUT\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 9\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 12,\n  columnNumber: 5\n}, this); //use the selectCartItems to make sure it not rerender whenever the state changes is unrelated to cart items\n\n\n_c = CartDropdown;\nconst mapStateToProps = createStructuredSelector({\n  cartItems: selectCartItems\n});\nexport default connect(mapStateToProps)(CartDropdown);\n\nvar _c;\n\n$RefreshReg$(_c, \"CartDropdown\");","map":{"version":3,"sources":["C:/Users/user/Desktop/react-course/kidft-store/src/components/cart-dropdown/cart-dropdown.component.jsx"],"names":["React","connect","createStructuredSelector","CustomButton","CartItem","selectCartItems","CartDropdown","cartItems","length","map","cartItem","id","mapStateToProps"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,wBAAT,QAAyC,UAAzC;AAEA,OAAOC,YAAP,MAAyB,0CAAzB;AACA,OAAOC,QAAP,MAAqB,kCAArB;AACA,SAASC,eAAT,QAAgC,iCAAhC;AAEA,OAAO,6BAAP;;;AAEA,MAAMC,YAAY,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,kBACjB;AAAK,EAAA,SAAS,EAAC,eAAf;AAAA,0BACI;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA,cAEQ;AACAA,IAAAA,SAAS,CAACC,MAAV,GACID,SAAS,CAACE,GAAV,CAAcC,QAAQ,iBAClB,QAAC,QAAD;AAA4B,MAAA,IAAI,EAAEA;AAAlC,OAAeA,QAAQ,CAACC,EAAxB;AAAA;AAAA;AAAA;AAAA,YADJ,CADJ,CAII;AAJJ;AAAA;AAMQ;AAAM,MAAA,SAAS,EAAC,eAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAThB;AAAA;AAAA;AAAA;AAAA,UADJ,eAcI,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAdJ;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,C,CAmBA;;;KAnBML,Y;AAoBN,MAAMM,eAAe,GAAGV,wBAAwB,CAAC;AAC7CK,EAAAA,SAAS,EAAEF;AADkC,CAAD,CAAhD;AAIA,eAAeJ,OAAO,CAACW,eAAD,CAAP,CAAyBN,YAAzB,CAAf","sourcesContent":["import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { createStructuredSelector } from \"reselect\";\r\n\r\nimport CustomButton from \"../custom-button/custom-button.component\";\r\nimport CartItem from \"../cart-item/cart-item.component\";\r\nimport { selectCartItems } from \"../../redux/cart/cart.selectors\";\r\n\r\nimport './cart-dropdown.styles.scss';\r\n\r\nconst CartDropdown = ({ cartItems }) => (\r\n    <div className='cart-dropdown'>\r\n        <div className='cart-items'>\r\n            {\r\n                //if > 0\r\n                cartItems.length ?\r\n                    cartItems.map(cartItem => (\r\n                        <CartItem key={cartItem.id} item={cartItem} />\r\n                    ))\r\n                    //else\r\n                    : (\r\n                        <span className='empty-message'>Your cart is empty.</span>\r\n                    )\r\n            }\r\n        </div>\r\n        <CustomButton>GO TO CHECKOUT</CustomButton>\r\n    </div>\r\n);\r\n\r\n//use the selectCartItems to make sure it not rerender whenever the state changes is unrelated to cart items\r\nconst mapStateToProps = createStructuredSelector({\r\n    cartItems: selectCartItems\r\n});\r\n\r\nexport default connect(mapStateToProps)(CartDropdown);\r\n\r\n"]},"metadata":{},"sourceType":"module"}