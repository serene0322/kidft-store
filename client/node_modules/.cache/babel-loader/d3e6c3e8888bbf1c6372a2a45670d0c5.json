{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\react-course\\\\kidft-store\\\\src\\\\pages\\\\product\\\\product.component.jsx\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { withRouter } from \"react-router\";\nimport ProductItem from \"../../components/product-item/product-item.component\";\nimport { SearchBar } from \"../../components/search-bar/search-bar.component\";\nimport CustomButton from \"../custom-button/custom-button.component\";\nimport { selectCollection } from \"../../redux/shop/shop.selectors\";\nimport { addItem } from \"../../redux/cart/cart.actions\";\nimport { useState } from \"react\";\nimport SimpleImageSlider from \"react-simple-image-slider\";\nimport './product.styles.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ProductPage = ({\n  collection,\n  match,\n  item,\n  addItem\n}) => {\n  const {\n    items\n  } = collection;\n  const image = items[match.params.itemId - 1].imageUrl; //convert the format to meet the slider requirement\n\n  const images = image.map(i => ({\n    'url': i\n  }));\n  console.log(match);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"collection-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"slider\",\n      children: /*#__PURE__*/_jsxDEV(SimpleImageSlider, {\n        width: 400,\n        height: 400,\n        images: images,\n        showBullets: true,\n        showNavs: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"product-detail\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        className: \"categoty\",\n        children: [match.params.collectionId.toUpperCase(), \" / \", match.params.itemId]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"name\",\n        children: items[match.params.itemId - 1].name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"desc\",\n        children: items[match.params.itemId - 1].desc\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"price\",\n        children: [\"RM \", items[match.params.itemId - 1].price]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(CustomButton, {\n        onClick: () => addItem(item),\n        inverted: true,\n        children: \"Add To Cart\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }, this);\n};\n\n_c = ProductPage;\n\nconst mapStateToProps = (state, ownProps) => ({\n  collection: selectCollection(ownProps.match.params.collectionId)(state)\n});\n\nconst mapDispatchToProps = dispatch => ({\n  addItem: item => dispatch(addItem(item))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(ProductPage));\n\nvar _c;\n\n$RefreshReg$(_c, \"ProductPage\");","map":{"version":3,"sources":["C:/Users/user/Desktop/react-course/kidft-store/src/pages/product/product.component.jsx"],"names":["React","connect","withRouter","ProductItem","SearchBar","CustomButton","selectCollection","addItem","useState","SimpleImageSlider","ProductPage","collection","match","item","items","image","params","itemId","imageUrl","images","map","i","console","log","collectionId","toUpperCase","name","desc","price","mapStateToProps","state","ownProps","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,UAAT,QAA2B,cAA3B;AAEA,OAAOC,WAAP,MAAwB,sDAAxB;AACA,SAASC,SAAT,QAA0B,kDAA1B;AACA,OAAOC,YAAP,MAAyB,0CAAzB;AAEA,SAASC,gBAAT,QAAiC,iCAAjC;AACA,SAASC,OAAT,QAAwB,+BAAxB;AACA,SAASC,QAAT,QAAyB,OAAzB;AAEA,OAAOC,iBAAP,MAA8B,2BAA9B;AAEA,OAAO,uBAAP;;;AAEA,MAAMC,WAAW,GAAG,CAAC;AAAEC,EAAAA,UAAF;AAAcC,EAAAA,KAAd;AAAqBC,EAAAA,IAArB;AAA2BN,EAAAA;AAA3B,CAAD,KAA0C;AAC1D,QAAM;AAAEO,IAAAA;AAAF,MAAYH,UAAlB;AAGA,QAAMI,KAAK,GAAGD,KAAK,CAACF,KAAK,CAACI,MAAN,CAAaC,MAAb,GAAsB,CAAvB,CAAL,CAA+BC,QAA7C,CAJ0D,CAM1D;;AACA,QAAMC,MAAM,GAAGJ,KAAK,CAACK,GAAN,CAAUC,CAAC,KAAK;AAAC,WAAOA;AAAR,GAAL,CAAX,CAAf;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYX,KAAZ;AAEA,sBACI;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA,4BAEI;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA,6BACI,QAAC,iBAAD;AACI,QAAA,KAAK,EAAE,GADX;AAEI,QAAA,MAAM,EAAE,GAFZ;AAGI,QAAA,MAAM,EAAEO,MAHZ;AAII,QAAA,WAAW,EAAE,IAJjB;AAKI,QAAA,QAAQ,EAAE;AALd;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAFJ,eAWI;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA,8BACI;AAAI,QAAA,SAAS,EAAC,UAAd;AAAA,mBAA0BP,KAAK,CAACI,MAAN,CAAaQ,YAAb,CAA0BC,WAA1B,EAA1B,SAAsEb,KAAK,CAACI,MAAN,CAAaC,MAAnF;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAI,QAAA,SAAS,EAAC,MAAd;AAAA,kBACKH,KAAK,CAACF,KAAK,CAACI,MAAN,CAAaC,MAAb,GAAsB,CAAvB,CAAL,CAA+BS;AADpC;AAAA;AAAA;AAAA;AAAA,cAFJ,eAKI;AAAG,QAAA,SAAS,EAAC,MAAb;AAAA,kBACKZ,KAAK,CAACF,KAAK,CAACI,MAAN,CAAaC,MAAb,GAAsB,CAAvB,CAAL,CAA+BU;AADpC;AAAA;AAAA;AAAA;AAAA,cALJ,eAQI;AAAI,QAAA,SAAS,EAAC,OAAd;AAAA,0BACQb,KAAK,CAACF,KAAK,CAACI,MAAN,CAAaC,MAAb,GAAsB,CAAvB,CAAL,CAA+BW,KADvC;AAAA;AAAA;AAAA;AAAA;AAAA,cARJ,eAWI,QAAC,YAAD;AAAc,QAAA,OAAO,EAAE,MAAMrB,OAAO,CAACM,IAAD,CAApC;AAA4C,QAAA,QAAQ,MAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAXJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAXJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AA8BH,CAxCD;;KAAMH,W;;AA0CN,MAAMmB,eAAe,GAAG,CAACC,KAAD,EAAQC,QAAR,MAAsB;AAC1CpB,EAAAA,UAAU,EAAEL,gBAAgB,CAACyB,QAAQ,CAACnB,KAAT,CAAeI,MAAf,CAAsBQ,YAAvB,CAAhB,CAAqDM,KAArD;AAD8B,CAAtB,CAAxB;;AAIA,MAAME,kBAAkB,GAAGC,QAAQ,KAAK;AACpC1B,EAAAA,OAAO,EAAEM,IAAI,IAAIoB,QAAQ,CAAC1B,OAAO,CAACM,IAAD,CAAR;AADW,CAAL,CAAnC;;AAIA,eAAeZ,OAAO,CAAC4B,eAAD,EAAkBG,kBAAlB,CAAP,CAA6C9B,UAAU,CAACQ,WAAD,CAAvD,CAAf","sourcesContent":["import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { withRouter } from \"react-router\";\r\n\r\nimport ProductItem from \"../../components/product-item/product-item.component\";\r\nimport { SearchBar } from \"../../components/search-bar/search-bar.component\";\r\nimport CustomButton from \"../custom-button/custom-button.component\";\r\n\r\nimport { selectCollection } from \"../../redux/shop/shop.selectors\";\r\nimport { addItem } from \"../../redux/cart/cart.actions\";\r\nimport { useState } from \"react\";\r\n\r\nimport SimpleImageSlider from \"react-simple-image-slider\";\r\n\r\nimport './product.styles.scss';\r\n\r\nconst ProductPage = ({ collection, match, item, addItem }) => {\r\n    const { items } = collection;\r\n    \r\n\r\n    const image = items[match.params.itemId - 1].imageUrl;\r\n\r\n    //convert the format to meet the slider requirement\r\n    const images = image.map(i => ({'url': i}));\r\n    console.log(match);\r\n    \r\n    return (\r\n        <div className='collection-page'>\r\n\r\n            <div className='slider'>\r\n                <SimpleImageSlider \r\n                    width={400}\r\n                    height={400}\r\n                    images={images}\r\n                    showBullets={true}\r\n                    showNavs={true}\r\n                />\r\n            </div>\r\n            <div className='product-detail'>\r\n                <h4 className='categoty'>{match.params.collectionId.toUpperCase()} / {match.params.itemId}</h4>\r\n                <h1 className='name'>\r\n                    {items[match.params.itemId - 1].name}\r\n                </h1>\r\n                <p className='desc'>\r\n                    {items[match.params.itemId - 1].desc}\r\n                </p>\r\n                <h3 className='price'>\r\n                    RM {items[match.params.itemId - 1].price}\r\n                </h3>\r\n                <CustomButton onClick={() => addItem(item)} inverted>Add To Cart</CustomButton>\r\n            </div>\r\n        \r\n            \r\n        \r\n        </div>\r\n    )\r\n};\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n    collection: selectCollection(ownProps.match.params.collectionId)(state)\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    addItem: item => dispatch(addItem(item))\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(ProductPage));\r\n\r\n"]},"metadata":{},"sourceType":"module"}