{"ast":null,"code":"//allow us to keep our files clean and organize functions that we may need in multiple files in one location\nexport const addItemToCart = (cartItems, cartItemToAdd) => {\n  const existingCartItem = cartItems.find(cartItem => cartItem.id === cartItemToAdd.id); //if exist, return a new array (new version of state) so can re-render\n\n  if (existingCartItem) {\n    return cartItems.map(cartItem => //if same item, create a new object which will have the cart item and quantity + 1\n    cartItem.id === cartItemToAdd.id ? { ...cartItem,\n      quantity: cartItem.quantity + 1\n    } //else of not match, just return the original cart item\n    : cartItem);\n  } //if the cart item is not found inside array, return a new array with all existing cart items that already there\n\n\n  return [...cartItems, { ...cartItemToAdd,\n    quantity: 1\n  }];\n};","map":{"version":3,"sources":["C:/Users/user/Desktop/react-course/kidft-store/src/redux/cart/cart.utils.js"],"names":["addItemToCart","cartItems","cartItemToAdd","existingCartItem","find","cartItem","id","map","quantity"],"mappings":"AAAA;AAEA,OAAO,MAAMA,aAAa,GAAG,CAACC,SAAD,EAAYC,aAAZ,KAA8B;AACvD,QAAMC,gBAAgB,GAAGF,SAAS,CAACG,IAAV,CACrBC,QAAQ,IAAIA,QAAQ,CAACC,EAAT,KAAgBJ,aAAa,CAACI,EADrB,CAAzB,CADuD,CAKvD;;AACA,MAAIH,gBAAJ,EAAsB;AAClB,WAAOF,SAAS,CAACM,GAAV,CAAcF,QAAQ,IACzB;AACAA,IAAAA,QAAQ,CAACC,EAAT,KAAgBJ,aAAa,CAACI,EAA9B,GACE,EAAE,GAAGD,QAAL;AAAeG,MAAAA,QAAQ,EAAEH,QAAQ,CAACG,QAAT,GAAoB;AAA7C,KADF,CAEA;AAFA,MAGEH,QALC,CAAP;AAOH,GAdsD,CAevD;;;AACA,SAAO,CAAC,GAAGJ,SAAJ,EAAe,EAAE,GAAGC,aAAL;AAAoBM,IAAAA,QAAQ,EAAE;AAA9B,GAAf,CAAP;AACH,CAjBM","sourcesContent":["//allow us to keep our files clean and organize functions that we may need in multiple files in one location\r\n\r\nexport const addItemToCart = (cartItems, cartItemToAdd) => {\r\n    const existingCartItem = cartItems.find(\r\n        cartItem => cartItem.id === cartItemToAdd.id\r\n    );\r\n\r\n    //if exist, return a new array (new version of state) so can re-render\r\n    if (existingCartItem) {\r\n        return cartItems.map(cartItem => \r\n            //if same item, create a new object which will have the cart item and quantity + 1\r\n            cartItem.id === cartItemToAdd.id\r\n            ? { ...cartItem, quantity: cartItem.quantity + 1}\r\n            //else of not match, just return the original cart item\r\n            : cartItem\r\n            )\r\n    }\r\n    //if the cart item is not found inside array, return a new array with all existing cart items that already there\r\n    return [...cartItems, { ...cartItemToAdd, quantity: 1}]\r\n};"]},"metadata":{},"sourceType":"module"}