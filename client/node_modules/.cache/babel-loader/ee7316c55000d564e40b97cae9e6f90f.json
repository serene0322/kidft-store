{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\react-course\\\\kidft-store\\\\src\\\\pages\\\\shop\\\\shop.component.jsx\";\nimport React from \"react\";\nimport { Route } from \"react-router-dom\";\nimport { createStructuredSelector } from \"reselect\";\nimport { connect } from \"react-redux\";\nimport CollectionOverviewContainer from \"../../components/collections-overview/collection-overview.container\";\nimport CollectionPage from \"../collection/collection.component\";\nimport { fetchCollectionsStartAsync } from '../../redux/shop/shop.actions';\nimport { selectIsCollectionFetching, selectIsCollectionsLoaded } from \"../../redux/shop/shop.selectors\";\nimport WithSpinner from \"../../components/with-spinner/with-spinner.component\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CollectionPageWithSpinner = WithSpinner(CollectionPage); //does the call to get and to update the snapshot on all information\n\n_c = CollectionPageWithSpinner;\n\nclass ShopPage extends React.Component {\n  componentDidMount() {\n    const {\n      fetchCollectionsStartAsync\n    } = this.props;\n    fetchCollectionsStartAsync();\n  }\n\n  render() {\n    const {\n      match,\n      isCollectionsLoaded\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"shop-page\",\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: `${match.path}`,\n        component: CollectionOverviewContainer\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: `${match.path}/:collectionId`,\n        render: props => /*#__PURE__*/_jsxDEV(CollectionPageWithSpinner, {\n          isLoading: !isCollectionsLoaded,\n          ...props\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = createStructuredSelector({\n  isCollectionsLoaded: selectIsCollectionsLoaded\n});\n\nconst mapDispatchToProps = dispatch => ({\n  fetchCollectionsStartAsync: () => dispatch(fetchCollectionsStartAsync())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ShopPage);\n\nvar _c;\n\n$RefreshReg$(_c, \"CollectionPageWithSpinner\");","map":{"version":3,"sources":["C:/Users/user/Desktop/react-course/kidft-store/src/pages/shop/shop.component.jsx"],"names":["React","Route","createStructuredSelector","connect","CollectionOverviewContainer","CollectionPage","fetchCollectionsStartAsync","selectIsCollectionFetching","selectIsCollectionsLoaded","WithSpinner","CollectionPageWithSpinner","ShopPage","Component","componentDidMount","props","render","match","isCollectionsLoaded","path","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,QAAsB,kBAAtB;AACA,SAASC,wBAAT,QAAyC,UAAzC;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,OAAOC,2BAAP,MAAwC,qEAAxC;AACA,OAAOC,cAAP,MAA2B,oCAA3B;AAEA,SAASC,0BAAT,QAA2C,+BAA3C;AACA,SAASC,0BAAT,EAAqCC,yBAArC,QAAsE,iCAAtE;AAEA,OAAOC,WAAP,MAAwB,sDAAxB;;AAEA,MAAMC,yBAAyB,GAAGD,WAAW,CAACJ,cAAD,CAA7C,C,CAEA;;KAFMK,yB;;AAGN,MAAMC,QAAN,SAAuBX,KAAK,CAACY,SAA7B,CAAuC;AACnCC,EAAAA,iBAAiB,GAAG;AAChB,UAAM;AAAEP,MAAAA;AAAF,QAAiC,KAAKQ,KAA5C;AACAR,IAAAA,0BAA0B;AAC7B;;AAEDS,EAAAA,MAAM,GAAG;AACL,UAAM;AAAEC,MAAAA,KAAF;AAASC,MAAAA;AAAT,QAAiC,KAAKH,KAA5C;AAEA,wBACI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,8BACI,QAAC,KAAD;AACI,QAAA,KAAK,MADT;AAEI,QAAA,IAAI,EAAG,GAAEE,KAAK,CAACE,IAAK,EAFxB;AAGI,QAAA,SAAS,EAAEd;AAHf;AAAA;AAAA;AAAA;AAAA,cADJ,eAMI,QAAC,KAAD;AACI,QAAA,IAAI,EAAG,GAAEY,KAAK,CAACE,IAAK,gBADxB;AAEI,QAAA,MAAM,EAAGJ,KAAD,iBACJ,QAAC,yBAAD;AAA2B,UAAA,SAAS,EAAE,CAACG,mBAAvC;AAAA,aAAgEH;AAAhE;AAAA;AAAA;AAAA;AAAA;AAHR;AAAA;AAAA;AAAA;AAAA,cANJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAeH;;AAxBkC;;AA2BvC,MAAMK,eAAe,GAAGjB,wBAAwB,CAAC;AAC7Ce,EAAAA,mBAAmB,EAAET;AADwB,CAAD,CAAhD;;AAIA,MAAMY,kBAAkB,GAAGC,QAAQ,KAAK;AACpCf,EAAAA,0BAA0B,EAAE,MAAMe,QAAQ,CAACf,0BAA0B,EAA3B;AADN,CAAL,CAAnC;;AAIA,eAAeH,OAAO,CAACgB,eAAD,EAAkBC,kBAAlB,CAAP,CAA6CT,QAA7C,CAAf","sourcesContent":["import React from \"react\";\r\nimport { Route } from \"react-router-dom\";\r\nimport { createStructuredSelector } from \"reselect\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport CollectionOverviewContainer from \"../../components/collections-overview/collection-overview.container\";\r\nimport CollectionPage from \"../collection/collection.component\";\r\n\r\nimport { fetchCollectionsStartAsync } from '../../redux/shop/shop.actions'\r\nimport { selectIsCollectionFetching, selectIsCollectionsLoaded } from \"../../redux/shop/shop.selectors\";\r\n\r\nimport WithSpinner from \"../../components/with-spinner/with-spinner.component\";\r\n\r\nconst CollectionPageWithSpinner = WithSpinner(CollectionPage);\r\n\r\n//does the call to get and to update the snapshot on all information\r\nclass ShopPage extends React.Component {\r\n    componentDidMount() {\r\n        const { fetchCollectionsStartAsync } = this.props;\r\n        fetchCollectionsStartAsync();\r\n    }\r\n\r\n    render() {\r\n        const { match, isCollectionsLoaded } = this.props;\r\n\r\n        return (\r\n            <div className='shop-page'>\r\n                <Route\r\n                    exact\r\n                    path={`${match.path}`}\r\n                    component={CollectionOverviewContainer}\r\n                />\r\n                <Route\r\n                    path={`${match.path}/:collectionId`}\r\n                    render={(props) => (\r\n                        <CollectionPageWithSpinner isLoading={!isCollectionsLoaded} {...props} />\r\n                    )}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n    isCollectionsLoaded: selectIsCollectionsLoaded\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    fetchCollectionsStartAsync: () => dispatch(fetchCollectionsStartAsync())\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ShopPage);"]},"metadata":{},"sourceType":"module"}