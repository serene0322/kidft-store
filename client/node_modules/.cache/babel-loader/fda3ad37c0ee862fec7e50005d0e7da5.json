{"ast":null,"code":"//the actual base reducer object that represents all of the state of our application\n//combine all other states together\nimport { combineReducers } from \"redux\";\nimport { persistReducer } from \"redux-persist\";\nimport storage from \"redux-persist/lib/storage\"; //local storage\n\nimport userReducer from \"./user/user.reducer\";\nimport cartReducer from \"./cart/cart.reducer\";\nconst persistConfig = {\n  key: 'root',\n  storage,\n  whitelist: ['cart'] //contains the string names of any reducer that want to store\n\n};\nconst rootReducer = combineReducers({\n  user: userReducer,\n  cart: cartReducer\n}); //return back modified version of rootReducer with persistConfig on top of it\n\nexport default persistReducer(persistConfig, rootReducer);","map":{"version":3,"sources":["C:/Users/user/Desktop/react-course/kidft-store/src/redux/root-reducer.js"],"names":["combineReducers","persistReducer","storage","userReducer","cartReducer","persistConfig","key","whitelist","rootReducer","user","cart"],"mappings":"AAAA;AACA;AACA,SAASA,eAAT,QAAgC,OAAhC;AACA,SAASC,cAAT,QAA+B,eAA/B;AACA,OAAOC,OAAP,MAAoB,2BAApB,C,CAAiD;;AAEjD,OAAOC,WAAP,MAAwB,qBAAxB;AACA,OAAOC,WAAP,MAAwB,qBAAxB;AAEA,MAAMC,aAAa,GAAG;AAClBC,EAAAA,GAAG,EAAE,MADa;AAElBJ,EAAAA,OAFkB;AAGlBK,EAAAA,SAAS,EAAE,CAAC,MAAD,CAHO,CAGE;;AAHF,CAAtB;AAMA,MAAMC,WAAW,GAAGR,eAAe,CAAC;AAChCS,EAAAA,IAAI,EAAEN,WAD0B;AAEhCO,EAAAA,IAAI,EAAEN;AAF0B,CAAD,CAAnC,C,CAKA;;AACA,eAAeH,cAAc,CAACI,aAAD,EAAeG,WAAf,CAA7B","sourcesContent":["//the actual base reducer object that represents all of the state of our application\r\n//combine all other states together\r\nimport { combineReducers } from \"redux\";\r\nimport { persistReducer } from \"redux-persist\";\r\nimport storage from \"redux-persist/lib/storage\"; //local storage\r\n\r\nimport userReducer from \"./user/user.reducer\";\r\nimport cartReducer from \"./cart/cart.reducer\";\r\n\r\nconst persistConfig = {\r\n    key: 'root',\r\n    storage,\r\n    whitelist: ['cart'] //contains the string names of any reducer that want to store\r\n}\r\n\r\nconst rootReducer = combineReducers({\r\n    user: userReducer,\r\n    cart: cartReducer\r\n});\r\n\r\n//return back modified version of rootReducer with persistConfig on top of it\r\nexport default persistReducer(persistConfig,rootReducer);"]},"metadata":{},"sourceType":"module"}